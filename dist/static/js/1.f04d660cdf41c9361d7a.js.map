{"version":3,"sources":["webpack:///src/base/listview/listview.vue","webpack:///./src/base/listview/listview.vue?8ad1","webpack:///./src/base/listview/listview.vue","webpack:///src/components/singer/singer.vue","webpack:///./src/components/singer/singer.vue?7bee","webpack:///./src/components/singer/singer.vue","webpack:///./src/api/singer.js"],"names":["listview","components","Scroll","scroll_scroll","loading","props","data","type","Array","default","scrollY","currentIndex","diff","created","this","touch","listenScroll","probeType","listHeight","computed","shortcutList","map","group","title","substr","fixedTitle","methods","selectItem","item","$emit","onShortCutTouchStart","e","anchorIndex","Object","dom","target","firstTouch","touches","y1","pageY","_scrollTo","onShortCutTouchMove","y2","delta","parseInt","refresh","$refs","scroll","pos","y","index","length","scrollToElement","listGroup","_calculateHeight","height","push","i","clientHeight","watch","_this","setTimeout","newVal","fixedTop","fixed","style","transform","newY","height1","height2","listview_listview","render","_vm","_h","$createElement","_c","_self","ref","staticClass","attrs","on","_l","key","refInFor","_v","_s","click","$event","directives","name","rawName","value","expression","touchstart","touchmove","stopPropagation","preventDefault","class","current","data-index","staticRenderFns","base_listview_listview","__webpack_require__","normalizeComponent","ssrContext","singer_singer","mixins","mixin","singers","ListView","_getSingerList","extends_default","handlePlaylist","playlist","bottom","singer","list","then","res","code","config","_normalizeSinger","hot","items","forEach","js_singer","Fsinger_name","id","Fsinger_mid","Findex","ret","val","match","sort","a","b","charCodeAt","concat","selectSinger","$router","path","setSinger","vuex_esm","components_singer_singer","select","singer_Component","singer_normalizeComponent","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_assign___default","commonParams","channel","page","pagesize","pagenum","hostUin","needNewCode","platform","jsonp","options","singerId","order","begin","num","songstatus","singermid"],"mappings":"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","file":"static/js/1.f04d660cdf41c9361d7a.js","sourcesContent":["<template>\n  <!-- ![singer interface](https://i.loli.net/2019/04/08/5caac3c529537.png) -->\n  <!-- :data=\"data\": data is async, data change refresh scroll -->\n  <scroll class=\"listview\" ref=\"listview\" :data=\"data\"  @scroll=\"scroll\" :listenScroll=\"listenScroll\" :probeType='probeType'>\n    <!-- 歌手列表 -->\n    <ul>\n      <li class=\"list-group\" ref=\"listGroup\" v-for=\"(group, index) in data\" :key=\"index\">\n        <h2 class=\"list-group-title\">{{group.title}}</h2>\n        <ul>\n          <li class=\"list-group-item\" v-for=\"(item, index) in group.items\" :key=\"index\" @click=\"selectItem(item)\">\n            <img class=\"avatar\" v-lazy=\"item.avatar\"/>\n            <span class=\"name\">{{item.name}}</span>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <!-- 字母列表 -->\n    <!-- @touchmove.stop.prevent:可以阻止浏览器或者任何地方的滚动，阻止冒泡事件 -->\n    <div class=\"list-shortcut\" @touchstart=\"onShortCutTouchStart\" @touchmove.stop.prevent=\"onShortCutTouchMove\">\n      <ul>\n        <!-- :data-index=\"index\" ：获取到当前是哪个索引，方便指定左侧该跳转的位置-->\n        <!-- :class=\"{'current': currentIndex === index}\"： 当左侧滑动时实现右边高亮 -->\n        <li class=\"item\" v-for=\"(item, index) in shortcutList\" :key=\"index\" :data-index=\"index\" :class=\"{'current': currentIndex === index}\">{{item}}</li> \n      </ul>\n    </div>\n    <div class=\"list-fixed\" ref=\"fixed\" v-show=\"fixedTitle\">\n      <h2 class=\"fixed-title\">{{fixedTitle}}</h2>\n    </div>\n    <div class=\"loading-container\" v-show=\"!data.length\">\n      <loading></loading>\n    </div>\n  </scroll>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { getData } from 'common/js/dom'\nimport Scroll from 'base/scroll/scroll'\nimport loading from 'base/loading/loading'\n// 样式定义的高度，用于后续计算字母个高度，确定滑动距离用\nconst ANCHOR_HEIGHT = 18\n\nconst FIXED_TITLE_HEIGHT = 30\n\nexport default {\n  components: {\n    Scroll,\n    loading\n  },\n  props: {\n    data: {\n      type: Array,\n      default: [],\n    }\n  },\n  data() {\n    return {\n      // 记录左侧歌手列表实时滚动位置\n      scrollY: -1, // real-time scroll position\n      // 记录当左侧滑动时，右侧应该高亮显示的字母表\n      currentIndex: 0, // which letters should be display\n      diff: -1 // diff: current element celling to pre element floor gaps\n    }\n  },\n  created() {\n    // 这个touch放在这里，就是为了实现touchmove和touchstart可以同时获取并更改这个值\n    // 为什么不放在data中呢，\n    // 因为vue里面会给data，props以及computed中的值做一个监听，主要是为了和dom做数据绑定的\n    // 而我们这个touch只是为了共享数据，所以，并不用监听，不放在data中\n    this.touch = {}\n    this.listenScroll = true\n    this.probeType = 3\n    this.listHeight = []\n  },\n  computed: {\n    shortcutList() { // ['A','B','C'...]\n      return this.data.map(group => {\n        return group.title.substr(0, 1)\n      })\n    },\n    fixedTitle() {\n      if (this.scrollY > 0) {\n        return ''\n      }\n      return this.data[this.currentIndex] ? this.data[this.currentIndex].title : ''\n    }\n  },\n  methods: {\n    // 向父元素传递此时被点击的是哪个元素\n    selectItem(item) {\n      this.$emit('select', item)\n    },\n    // 手指点击 触发事件\n    onShortCutTouchStart(e) {\n      // 单独封装一个类getData(src/common/js/dom.js)实现索引的获取\n      const anchorIndex = getData(e.target, 'index') // getData(): get index\n      // 跳转到左侧相应位置\n      // this.$refs.listview.scrollToElement(this.$refs.listGroup[anchorIndex], 0)\n\n      // firstTouch：实现滑动，需要记录的变量，当前手指开始触碰屏幕的位置\n      const firstTouch = e.touches[0] // e.touches[0]: click position\n      this.touch.y1 = firstTouch.pageY\n      // 将当前点击的索引记录下来\n      this.touch.anchorIndex = anchorIndex\n      // 将跳转单独封装成一个方法，因为不仅这里要用，下面的onShortCutTouchMove也要用\n      this._scrollTo(anchorIndex)\n    },\n    // 手指滑动 触发事件\n    onShortCutTouchMove(e) {\n      // 思路：从touchstart 到 touchmove滚动的位置，计算当前位置和一开始滚动位置的差值data，根据这个data确定滚动到哪\n      // firstTouch：实现滑动，需要记录的变量，当前手指现在滑动到的屏幕的位置\n      const firstTouch = e.touches[0]\n      this.touch.y2 = firstTouch.pageY\n      const delta = ((this.touch.y2 - this.touch.y1) / ANCHOR_HEIGHT) | 0 // | 0: Math.floor：向下取整\n      // 将手指最初点击的索引的位置，加上手指滑过了几个索引，这样就可以确定手指的当前索引位置\n      const anchorIndex = parseInt(this.touch.anchorIndex) + delta // stop position index\n      this._scrollTo(anchorIndex)\n    },\n    refresh() {\n      this.$refs.listview.refresh()\n    },\n\n// 将私有方法放在下面，将公共方法放在上面\n    scroll(pos) {\n      this.scrollY = pos.y\n    },\n    // 当有索引值之后，跳转到当前\n    _scrollTo(index) {\n      // 如果点击字母表上下多出来的部分(ul自带的)，但是没有的地方，直接返回\n      // click on the blank \n      // index === null\n      if (!index && index !== 0) {\n        return\n      }\n      // 如果手指滑动到字母表A往上，或者Z往下做一个判断\n      if (index < 0) {\n        index = 0\n      } else if (index > this.listHeight.length - 2) {\n        index = this.listHeight.length - 2\n      }\n      this.scrollY = -this.listHeight[index]\n\n      // scrollToElement第二个参数的含义就是我们要不要有一个动画时间，\n      // scrollToElement虽然已经做了边界处理了，但是我们还是最好自己做一个边界处理\n      this.$refs.listview.scrollToElement(this.$refs.listGroup[index], 0) // scrollToElement: element, animate time\n    },\n    // 计算左侧每个group的高度，方便实现右侧字母表高亮，\n    _calculateHeight() {\n      let height = 0\n      const listGroup = this.$refs.listGroup\n      this.listHeight = []\n      this.listHeight.push(height)\n      for (let i = 0; i < listGroup.length; i++) {\n        // 获取到dom，并计算每个dom结点占据屏幕高度\n        const item = listGroup[i]\n        // clientHeight:当前item内容区高度\n        height += item.clientHeight\n        // console.log(height);\n        this.listHeight.push(height)\n        // listHeight:[0, 760, 1030, 1370......]\n        // 也就是i字母对应的listHeight[i]是i的头位置，listHeight[i + 1]是i的尾位置\n      }\n    }\n  },\n  watch: {\n    data() { // 20: browser 17ms dom render complete\n    // 因为数据到渲染还是需要时间，所以设置延迟，是为了我们充分保证此时可以拿到高度\n      setTimeout(() => {\n        this._calculateHeight()\n      }, 20)\n    },\n    diff(newVal) {\n      const fixedTop = newVal > 0 && newVal < FIXED_TITLE_HEIGHT ? newVal - FIXED_TITLE_HEIGHT : 0\n      if (this.fixedTop === fixedTop) { // when the title animation not trigger, fixedTop not change\n        return\n      }\n      this.fixedTop = fixedTop\n      // 上面三行就是为了减少dom操作的频度，只有当两个title碰见之后才让上一个title进行偏移，否则上一个title位置不改变\n      this.$refs.fixed.style.transform = `translate3d(0, ${fixedTop}px, 0)`\n    },\n    scrollY(newY) {\n      const listHeight = this.listHeight\n\n      // 第一种情况：when scroll to the top, newY > 0\n      if (newY > 0) { \n        this.currentIndex = 0\n        return\n      }\n      // 将当前的偏移值和listHeight做个对比，比较上限和下限等，然后确定这个newY落到哪个区间\n      // listHeight one more element than listGroup\n\n      //第二种情况： when scroll to the middle section,\n      for (let i = 0; i < listHeight.length - 1; i++) { \n        const height1 = listHeight[i]\n        const height2 = listHeight[i + 1]\n        // -newY: When scroll, newY is negative, add “-” ensure positive\n        if (-newY >= height1 && -newY < height2) { \n          this.currentIndex = i\n          // 滑动的时候，计算两个title之间的高度，因为newY是个负值，用下一个高度值减去偏移的值就是title之间的距离\n          this.diff = newY + height2 // diff: trigger animate of the title\n          // console.log(this.diff);\n          return\n        }\n        this.currentIndex = 0\n      }\n\n      //第三种情况： when scroll to the bottom\n        //            length - 2    length- 1\n        // [......, 'Z的起始位置','Z的结束位置']\n      this.currentIndex = listHeight.length - 2 \n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\" rel=\"stylesheet/scss\">\n@import \"./listview.scss\";\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/base/listview/listview.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('scroll',{ref:\"listview\",staticClass:\"listview\",attrs:{\"data\":_vm.data,\"listenScroll\":_vm.listenScroll,\"probeType\":_vm.probeType},on:{\"scroll\":_vm.scroll}},[_c('ul',_vm._l((_vm.data),function(group,index){return _c('li',{key:index,ref:\"listGroup\",refInFor:true,staticClass:\"list-group\"},[_c('h2',{staticClass:\"list-group-title\"},[_vm._v(_vm._s(group.title))]),_vm._v(\" \"),_c('ul',_vm._l((group.items),function(item,index){return _c('li',{key:index,staticClass:\"list-group-item\",on:{\"click\":function($event){return _vm.selectItem(item)}}},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(item.avatar),expression:\"item.avatar\"}],staticClass:\"avatar\"}),_vm._v(\" \"),_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(item.name))])])}),0)])}),0),_vm._v(\" \"),_c('div',{staticClass:\"list-shortcut\",on:{\"touchstart\":_vm.onShortCutTouchStart,\"touchmove\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onShortCutTouchMove($event)}}},[_c('ul',_vm._l((_vm.shortcutList),function(item,index){return _c('li',{key:index,staticClass:\"item\",class:{'current': _vm.currentIndex === index},attrs:{\"data-index\":index}},[_vm._v(_vm._s(item))])}),0)]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.fixedTitle),expression:\"fixedTitle\"}],ref:\"fixed\",staticClass:\"list-fixed\"},[_c('h2',{staticClass:\"fixed-title\"},[_vm._v(_vm._s(_vm.fixedTitle))])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.data.length),expression:\"!data.length\"}],staticClass:\"loading-container\"},[_c('loading')],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-55639bd0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/base/listview/listview.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-55639bd0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./listview.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./listview.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./listview.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-55639bd0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./listview.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-55639bd0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base/listview/listview.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"singer\" ref=\"singer\">\n    <!-- @select=\"selectSinger\" 接受子组件传来的事件-->\n    <list-view :data=\"singers\" ref=\"list\" @select=\"selectSinger\"></list-view>\n    <router-view></router-view>\n  </div>\n</template>\n<script>\nimport { getSingerList } from 'api/singer'\nimport { ERR_OK } from 'api/config'\nimport Singer from 'common/js/singer'\nimport { playlistMixin } from 'common/js/mixin'\nimport ListView from 'base/listview/listview'\nimport {mapMutations} from 'vuex'\n// 将前10条数据定义为热门数据\nconst HOT_SINGER_LEN = 10\n// 定义title为热门\nconst HOT_NAME = '热门'\nexport default {\n  mixins: [playlistMixin],\n  data() {\n    return {\n      singers: []\n    }\n  },\n  components:{\n    ListView,\n  },\n  created() {\n    this._getSingerList() // get singer data\n  },\n  methods:{\n    handlePlaylist(playlist) {\n      // 当playlist中有数据的时候，就将滚动组件的bottom设置为60px\n      const bottom = playlist.length > 0 ? '60px' : ''\n      this.$refs.singer.style.bottom = bottom\n      // console.log(this.$refs.list, '-----------')\n      this.$refs.list.refresh()\n    },\n     _getSingerList() {\n      getSingerList().then(res => {\n        if (res.code === ERR_OK) {\n          // [singer data](https://c.y.qq.com/v8/fcg-bin/fcg_v8_singer_track_cp.fcg?g_tk=5381&inCharset=utf-8&outCharset=utf-8&notice=0&format=jsonp&hostUin=0&needNewCode=0&platform=yqq&order=listen&begin=0&num=80&songstatus=1&singermid=0025NhlN2yWrP4&jsonpCallback=__jp1)\n          // this.singers = this._normalizeSinger(res.data.list)\n          this.singers = this._normalizeSinger(res.data.list);\n        }\n      })\n    },\n    // 将数据格式化\n    _normalizeSinger(list) {\n      // 定义一个热门数据的数组，包括title(\"热门\")和items(前十条数据)\n      const map = {\n        hot: {\n          title: HOT_NAME,\n          items: []\n        }\n      }\n      // 给map这个热门数据填充数据，热门数据定义为前10条数据就是热门数据\n      list.forEach((item, index) => {\n        if (index < HOT_SINGER_LEN) { // previous 10 data, include '热门'\n          // map.hot.items.push(\n          //   {\n          //     name: item.Fsinger_name,\n          //     id: item.Fsinger_mid,\n          //     avtor: `https://y.gtimg.cn/music/photo_new/T001R300x300M000${item.Fsinger_mid}.jpg?max_age=2592000`,\n          //   }\n          // )\n          map.hot.items.push(\n            new Singer({\n              name: item.Fsinger_name,\n              id: item.Fsinger_mid\n            })\n          )\n        }\n        // 根据Findex进行个分类，Findex就是字母\n        const key = item.Findex\n        if (!map[key]) { // after 10 data, not include '热门'\n          map[key] = {\n            title: key,\n            items: []\n          }\n        }\n        // map[key].items.push(\n        //     {\n        //       name: item.Fsinger_name,\n        //       id: item.Fsinger_mid,\n        //       avtor: `https://y.gtimg.cn/music/photo_new/T001R300x300M000${item.Fsinger_mid}.jpg?max_age=2592000`,\n        //     }\n        //   )\n        map[key].items.push(\n          new Singer({\n            name: item.Fsinger_name,\n            id: item.Fsinger_mid\n          })\n        )\n      })\n\n      // 此时的map是个对象，里面也是一个一个对象，但是我们此时需要的是一个有序数组列表\n      // console.log(map);\n      // 为了得到有序列表，我们需要处理map\n\n      // 处理热门数据剩下的数据，也就是按字母分类的数组\n      const ret = []\n      // 热门数组\n      const hot = []\n      for (const key in map) {\n        const val = map[key]\n        // 如果key是字母，就放入除了热门剩下的数组中\n        if (val.title.match(/[a-zA-Z]/)) { // distinguishes '热门' & letter\n          ret.push(val)\n          // 否则放入热门数组\n        } else if (val.title === HOT_NAME) {\n          hot.push(val)\n        }\n      }\n\n      // 将字母数组按照字母表顺序排序\n      ret.sort((a, b) => { // ascend sort\n        return a.title.charCodeAt(0) - b.title.charCodeAt(0)\n      })\n      // 将数组拼接返回去，得到的也就是一个一维数组\n      return hot.concat(ret)\n    },\n    selectSinger(singer) {\n      this.$router.push({ // route jump\n        path: `/singer/${singer.id}`\n      })\n      this.setSinger(singer)\n    },\n    // 经过这个映射，在代码中就可以调用this.setSinger\n    ...mapMutations({\n      setSinger: 'SET_SINGER'\n    })\n  }\n}\n</script>\n<style scoped lang=\"scss\" rel=\"stylesheet/scss\">\n// 这个.singer.scss中.singer类设置了position: fixed;就是为了固定父容器高度\n// 因为better-scroll有个条件就是父容器的高度要限制好，子元素撑开之后才能实现滚动\n@import './singer.scss';\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/singer/singer.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"singer\",staticClass:\"singer\"},[_c('list-view',{ref:\"list\",attrs:{\"data\":_vm.singers},on:{\"select\":_vm.selectSinger}}),_vm._v(\" \"),_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5798397a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/singer/singer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5798397a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./singer.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./singer.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./singer.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5798397a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./singer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5798397a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/singer/singer.vue\n// module id = null\n// module chunks = ","import jsonp from 'common/js/jsonp'\nimport { commonParams, options } from 'api/config'\n\n// singer data\n// [singer data](https://c.y.qq.com/v8/fcg-bin/fcg_v8_singer_track_cp.fcg?g_tk=5381&inCharset=utf-8&outCharset=utf-8&notice=0&format=jsonp&hostUin=0&needNewCode=0&platform=yqq&order=listen&begin=0&num=80&songstatus=1&singermid=0025NhlN2yWrP4&jsonpCallback=__jp1)\n// 所有歌手列表\nexport function getSingerList() {\n  // ![singer interface](https://i.loli.net/2019/04/08/5caac31779667.png)\n  const url = 'https://c.y.qq.com/v8/fcg-bin/v8.fcg'\n  const data = Object.assign({}, commonParams, {\n    channel: 'singer',\n    page: 'list',\n    key: 'all_all_all',\n    pagesize: 100,\n    pagenum: 1,\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq'\n  })\n  return jsonp(url, data, options)\n}\n\n/**\n * singer detail data\n * @param singerId\n */\n// 每个歌手有单独的id就是singerId，根据id抓取该歌手的信息\nexport function getSingerDetail(singerId) {\n  // ![singer detail interface](https://i.loli.net/2019/04/08/5caac3e8e7a0f.png)\n  const url = 'https://c.y.qq.com/v8/fcg-bin/fcg_v8_singer_track_cp.fcg'\n  const data = Object.assign({}, commonParams, {\n    hostUin: 0,\n    needNewCode: 0,\n    platform: 'yqq',\n    order: 'listen',\n    begin: 0,\n    num: 80,\n    songstatus: 1,\n    singermid: singerId\n  })\n  return jsonp(url, data, options)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/singer.js"],"sourceRoot":""}